{"version":3,"sources":["../../../src/main/ast/binaryexpression.js"],"names":["BinaryExpression","left","operator","right","Expression"],"mappings":";;;;;;;;;AAAA;;;;;;;;IAEaA,gB,WAAAA,gB;;;AAET,8BAAYC,IAAZ,EAAkBC,QAAlB,EAA4BC,KAA5B,EAAmC;AAAA;;AAAA;;AAG/B,cAAKF,IAAL,GAAYA,IAAZ;AACA,cAAKC,QAAL,GAAgBA,QAAhB;AACA,cAAKC,KAAL,GAAaA,KAAb;AAL+B;AAMlC;;;;6CAEoB;AACjB,mBAAO,IAAP;AACH;;;;EAZiCC,sB","file":"binaryexpression.js","sourcesContent":["import { Expression } from './expression'\n\nexport class BinaryExpression extends Expression {\n\n    constructor(left, operator, right) {\n        super();\n\n        this.left = left;\n        this.operator = operator;\n        this.right = right;\n    }\n\n    isBinaryExpression() {\n        return true;\n    }\n}"]}