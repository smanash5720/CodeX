{"version":3,"sources":["../../../../src/main/interpreter/std/null.js"],"names":["NullClass","name","Types","Null","functions","push","Function","String","NativeExpression","context","value","Obj","create","set","Formal","Object","Bool","store","get","environment","find","type","Class"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;IAEaA,S,WAAAA,S;;;AAET,yBAAc;AAAA;;AAAA;;AAGV,cAAKC,IAAL,GAAYC,aAAMC,IAAlB;;AAEA,cAAKC,SAAL,CAAeC,IAAf,CAAoB,IAAIC,cAAJ,CAAa,UAAb,EAAyB,EAAzB,EAA6BJ,aAAMK,MAAnC,EAChB,IAAIC,kCAAJ,CAAqB,UAACC,OAAD,EAAa;AAC9B,gBAAIC,QAAQC,YAAIC,MAAJ,CAAWH,OAAX,EAAoBP,aAAMK,MAA1B,CAAZ;;AAEAG,kBAAMG,GAAN,CAAU,OAAV,EAAmB,MAAnB;;AAEA,mBAAOH,KAAP;AACH,SAND,CADgB,EAOZ,IAPY,CAApB;;AASA,cAAKN,SAAL,CAAeC,IAAf,CAAoB,IAAIC,cAAJ,CAAa,IAAb,EAAmB,CAAC,IAAIQ,cAAJ,CAAW,KAAX,EAAkBZ,aAAMa,MAAxB,CAAD,CAAnB,EAAsDb,aAAMc,IAA5D,EAChB,IAAIR,kCAAJ,CAAqB,UAACC,OAAD,EAAa;AAC9B,gBAAIC,QAAQC,YAAIC,MAAJ,CAAWH,OAAX,EAAoBP,aAAMc,IAA1B,CAAZ;;AAEAN,kBAAMG,GAAN,CAAU,OAAV,EAAmBJ,QAAQQ,KAAR,CAAcC,GAAd,CAAkBT,QAAQU,WAAR,CAAoBC,IAApB,CAAyB,KAAzB,CAAlB,EAAmDC,IAAnD,KAA4DnB,aAAMC,IAArF;;AAEA,mBAAOO,KAAP;AACH,SAND,CADgB,CAApB;;AASA,cAAKN,SAAL,CAAeC,IAAf,CAAoB,IAAIC,cAAJ,CAAa,IAAb,EAAmB,CAAC,IAAIQ,cAAJ,CAAW,KAAX,EAAkBZ,aAAMa,MAAxB,CAAD,CAAnB,EAAsDb,aAAMc,IAA5D,EAChB,IAAIR,kCAAJ,CAAqB,UAACC,OAAD,EAAa;AAC9B,gBAAIC,QAAQC,YAAIC,MAAJ,CAAWH,OAAX,EAAoBP,aAAMc,IAA1B,CAAZ;;AAEAN,kBAAMG,GAAN,CAAU,OAAV,EAAmBJ,QAAQQ,KAAR,CAAcC,GAAd,CAAkBT,QAAQU,WAAR,CAAoBC,IAApB,CAAyB,KAAzB,CAAlB,EAAmDC,IAAnD,KAA4DnB,aAAMC,IAArF;;AAEA,mBAAOO,KAAP;AACH,SAND,CADgB,CAApB;AAvBU;AA+Bb;;;EAjC0BY,Y","file":"null.js","sourcesContent":["import { Class } from '../../ast/class'\nimport { Formal } from '../../ast/formal'\nimport { Function } from '../../ast/func'\nimport { NativeExpression } from '../../ast/nativeexpression'\nimport { Obj } from '../object'\nimport { Types } from '../../types/types'\n\nexport class NullClass extends Class {\n\n    constructor() {\n        super();\n\n        this.name = Types.Null;\n\n        this.functions.push(new Function('toString', [], Types.String,\n            new NativeExpression((context) => {\n                let value = Obj.create(context, Types.String);\n\n                value.set('value', 'null');\n\n                return value;\n            }), true));\n\n        this.functions.push(new Function('==', [new Formal('rhs', Types.Object)], Types.Bool,\n            new NativeExpression((context) => {\n                let value = Obj.create(context, Types.Bool);\n\n                value.set('value', context.store.get(context.environment.find('rhs')).type === Types.Null);\n\n                return value;\n            })));\n\n        this.functions.push(new Function('!=', [new Formal('rhs', Types.Object)], Types.Bool,\n            new NativeExpression((context) => {\n                let value = Obj.create(context, Types.Bool);\n\n                value.set('value', context.store.get(context.environment.find('rhs')).type !== Types.Null);\n\n                return value;\n            })));\n    }\n}"]}