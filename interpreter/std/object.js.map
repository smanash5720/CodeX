{"version":3,"sources":["../../../../src/main/interpreter/std/object.js"],"names":["ObjectClass","name","Types","Object","functions","push","Function","Formal","String","Bool","NativeExpression","context","type","store","get","environment","find","self","value","Obj","create","set","address","rhs","object","This","expressionType","arg","Reference","call","FunctionCall","Evaluator","evaluate","Null","Class"],"mappings":"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","file":"object.js","sourcesContent":["import { Class } from '../../ast/class'\nimport { Evaluator } from '../../interpreter/evaluator'\nimport { Formal } from '../../ast/formal'\nimport { Function } from '../../ast/func'\nimport { FunctionCall } from '../../ast/functioncall'\nimport { NativeExpression } from '../../ast/nativeexpression'\nimport { Obj } from '../../interpreter/object'\nimport { Reference } from '../../ast/reference'\nimport { This } from '../../ast/this'\nimport { TypeChecker } from '../../semanticanalysis/typechecker'\nimport { Types } from '../../types/types'\n\nexport class ObjectClass extends Class {\n\n    constructor() {\n        super();\n\n        this.name = Types.Object;\n\n        this.functions.push(new Function('instanceOf', [new Formal('type', Types.String)], Types.Bool,\n            new NativeExpression((context) => {\n                let type = context.store.get(context.environment.find('type'));\n                let self = context.self;\n\n                let value = Obj.create(context, Types.Bool);\n\n                value.set('value', self.type === type.get('value'));\n\n                return value;\n            })));\n\n        this.functions.push(new Function('toString', [], Types.String,\n            new NativeExpression((context) => {\n                let value = Obj.create(context, Types.String);\n\n                value.set('value', context.self.type + '@' + context.self.address);\n\n                return value;\n            })));\n\n        this.functions.push(new Function('==', [new Formal('rhs', Types.Object)], Types.Bool,\n            new NativeExpression((context) => {\n                let rhs = context.store.get(context.environment.find('rhs'));\n\n                let value = Obj.create(context, Types.Bool);\n\n                if (context.self.type !== rhs.type) {\n                    value.set('value', false);\n                } else {\n                    value.set('value', context.self.address === rhs.address);\n                }\n\n                return value;\n            })));\n\n        this.functions.push(new Function('!=', [new Formal('rhs', Types.Object)], Types.Bool,\n            new NativeExpression((context) => {\n                let rhs = context.store.get(context.environment.find('rhs'));\n\n                let object = new This();\n                object.expressionType = Types.Object;\n\n                let arg = new Reference('rhs');\n                arg.expressionType = Types.Object;\n\n                let call = new FunctionCall(object, '==', [arg]);\n\n                let value = Evaluator.evaluate(context, call);\n\n                value.set('value', !value.get('value'));\n\n                return value;\n            })));\n\n        this.functions.push(new Function('!=', [new Formal('rhs', Types.Null)], Types.Bool,\n            new NativeExpression((context) => {\n                let value = Obj.create(context, Types.Bool);\n\n                value.set('value', context.self.type !== Types.Null);\n\n                return value;\n            })));\n\n        this.functions.push(new Function('+', [new Formal('rhs', Types.String)], Types.String,\n            new NativeExpression((context) => {\n                let rhs = context.store.get(context.environment.find('rhs'));\n\n                let object = new This();\n                object.expressionType = Types.Object;\n\n                let call = new FunctionCall(object, 'toString', []);\n\n                let self = Evaluator.evaluate(context, call);\n\n                let value = Obj.create(context, Types.String);\n\n                value.set('value', self.get('value') + rhs.get('value'));\n\n                return value;\n            })));\n    }\n}"]}