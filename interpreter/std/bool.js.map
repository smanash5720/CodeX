{"version":3,"sources":["../../../../src/main/interpreter/std/bool.js"],"names":["BoolClass","name","Types","Bool","superClass","Object","properties","push","Formal","functions","Function","String","NativeExpression","context","value","Obj","create","set","self","get","toString","rhs","store","environment","find","lhs","type","result","address","Evaluator","evaluate","expression","put","Class"],"mappings":"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","file":"bool.js","sourcesContent":["import { Class } from '../../ast/class'\nimport { Evaluator } from '../../interpreter/evaluator'\nimport { Formal } from '../../ast/formal'\nimport { Function } from '../../ast/func'\nimport { NativeExpression } from '../../ast/nativeexpression'\nimport { Obj } from '../../interpreter/object'\nimport { Types } from '../../types/types'\n\nexport class BoolClass extends Class {\n\n    constructor() {\n        super();\n\n        this.name = Types.Bool;\n\n        this.superClass = Types.Object;\n\n        this.properties.push(new Formal('value', 'bool'));\n\n        this.functions.push(new Function('toString', [], Types.String,\n            new NativeExpression((context) => {\n                let value = Obj.create(context, Types.String);\n\n                value.set('value', context.self.get('value').toString());\n\n                return value;\n            }), true));\n\n        this.functions.push(new Function('==', [new Formal('rhs', Types.Object)], Types.Bool,\n            new NativeExpression((context) => {\n                let rhs = context.store.get(context.environment.find('rhs'));\n                let lhs = context.self;\n\n                let value = Obj.create(context, Types.Bool);\n\n                if (rhs.type !== Types.Bool) {\n                    value.set('value', false);\n                } else {\n                    value.set('value', lhs.get('value') === rhs.get('value'));\n                }\n\n                return value;\n            }), true));\n\n        this.functions.push(new Function('unary_!', [], Types.Bool,\n            new NativeExpression((context) => {\n                let result = Obj.create(context, Types.Bool);\n\n                result.set('value', !context.self.get('value'));\n\n                return result;\n            })));\n\n        this.functions.push(new Function('&&', [new Formal('rhs', Types.Bool, true)], Types.Bool,\n            new NativeExpression((context) => {\n                let lhs = context.self;\n\n                let value = Obj.create(context, Types.Bool);\n\n                if (lhs.get('value') === false) {\n                    value.set('value', false);\n\n                } else {\n                    let address = context.environment.find('rhs');\n\n                    let rhs = context.store.get(address);\n\n                    rhs = Evaluator.evaluate(rhs.context, rhs.expression);\n\n                    context.store.put(address, rhs);\n\n                    value.set('value', rhs.get('value'));\n                }\n\n                return value;\n            })));\n\n        this.functions.push(new Function('||', [new Formal('rhs', Types.Bool, true)], Types.Bool,\n            new NativeExpression((context) => {\n                let lhs = context.self;\n\n                let value = Obj.create(context, Types.Bool);\n\n                if (lhs.get('value') === true) {\n                    value.set('value', true);\n\n                } else {\n                    let address = context.environment.find('rhs');\n\n                    let rhs = context.store.get(address);\n\n                    rhs = Evaluator.evaluate(rhs.context, rhs.expression);\n\n                    context.store.put(address, rhs);\n\n                    value.set('value', rhs.get('value'));\n                }\n\n                return value;\n            })));\n    }\n}"]}