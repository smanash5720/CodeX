{"version":3,"sources":["../../../src/main/interpreter/object.js"],"names":["Obj","type","undefined","properties","Map","methods","address","functions","propertyName","get","value","set","has","methodName","argsTypes","filter","method","name","i","length","parametersTypes","parameters","map","param","TypesUtils","allEqual","functionName","context","func","allConform","reduce","curr","prev","mostSpecificFunction","l","equals","str","keys","className","klass","getClass","object","superClass","create","forEach","identifier","defaultValue","variable","superClassMethodIndex","findMethodIndex","override","splice","push","isInternal","Types","Int","Double","Bool","String","Null"],"mappings":"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","file":"object.js","sourcesContent":["import { Types } from '../types/types'\nimport { TypesUtils } from '../types/typesutils'\n\nexport class Obj {\n\n    constructor(type = undefined, properties = new Map(), methods = [], address = undefined) {\n        this.type = type;\n        this.properties = properties;\n        this.functions = methods;\n        this.address = address;\n    }\n\n    get(propertyName) {\n        return this.properties.get(propertyName);\n    }\n\n    set(propertyName, value) {\n        this.properties.set(propertyName, value);\n    }\n\n    has(propertyName) {\n        return this.properties.has(propertyName);\n    }\n\n    static create(context, className) {\n        let klass = context.getClass(className);\n\n        let object = klass.superClass !== undefined\n            ? Obj.create(context, klass.superClass)\n            : new Obj(className);\n\n        klass.parameters.forEach((param) => {\n            object.properties.set(param.identifier, Obj.defaultValue(context, param.type));\n        });\n\n        klass.properties.forEach((variable) => {\n            object.properties.set(variable.identifier, Obj.defaultValue(context, variable.type));\n        });\n\n        klass.functions.forEach((method) => {\n            let superClassMethodIndex = object.findMethodIndex(method);\n\n            if (superClassMethodIndex !== -1 && method.override) {\n                object.functions.splice(superClassMethodIndex, 1);\n            }\n\n            object.functions.push(method);\n        });\n\n        object.type = className;\n\n        return object;\n    }\n\n    getMethod(methodName, argsTypes) {\n        let methods = this.functions.filter((method) => method.name === methodName);\n\n        for (let i = 0, length = methods.length; i < length; ++i) {\n            let method = methods[i];\n            let parametersTypes = method.parameters.map((param) => param.type);\n\n            if (TypesUtils.allEqual(argsTypes, parametersTypes)) {\n                return method;\n            }\n        }\n\n        return null;\n    }\n\n    getMostSpecificFunction(functionName, argsTypes, context) {\n        let functions = this.functions.filter((func) => func.name === functionName);\n\n        if (functions.length === 0) {\n            return undefined;\n        }\n\n        functions = functions.filter((method) => TypesUtils.allConform(argsTypes, method.parameters.map((param) => param.type), context));\n\n        if (functions.length === 0) {\n            return undefined;\n        }\n\n        return functions.reduce((curr, prev) => TypesUtils.mostSpecificFunction(curr, prev, context));\n    }\n\n    static defaultValue(context, type) {\n        if (TypesUtils.isInternal(type)) {\n            return undefined;\n        }\n\n        let value = null;\n\n        switch (type) {\n            case Types.Int:\n                value = Obj.create(context, Types.Int);\n                value.set('value', 0);\n\n                break;\n\n            case Types.Double:\n                value = Obj.create(context, Types.Double);\n                value.set('value', 0.0);\n\n                break;\n\n            case Types.Bool:\n                value = Obj.create(context, Types.Bool);\n                value.set('value', false);\n\n                break;\n\n            case Types.String:\n                value = Obj.create(context, Types.String);\n                value.set('value', '\"\"');\n\n                break;\n\n            default:\n                value = Obj.create(context, Types.Null);\n\n                break;\n        }\n\n        return value;\n    }\n\n    findMethodIndex(method) {\n        for (let i = 0, l = this.functions.length; i < l; ++i) {\n            if (this.functions[i].equals(method)) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    toString() {\n        let str = this.type + '(';\n\n        let l = this.properties.keys.length;\n\n        for (let i = 0; i < l - 1; ++i) {\n            str += this.properties.keys[i] + ': ' + this.properties.get(this.properties.keys[i]) + ', ';\n        }\n\n        str += this.properties.keys[l - 1] + ': ' + this.properties.get(this.properties.keys[l - 1]);\n\n        str += ')';\n\n        return str;\n    }\n}"]}