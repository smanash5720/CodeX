{"version":3,"sources":["../../../src/main/interpreter/environment.js"],"names":["Environment","scopes","scope","currentScopeIndex","length","push","Map","identifier","address","set","undefined","index","get","splice"],"mappings":";;;;;;;;;;IAAaA,W,WAAAA,W;AAET,2BAAc;AAAA;;AACV,aAAKC,MAAL,GAAc,EAAd;AACA,aAAKC,KAAL,GAAa,IAAb;AACA,aAAKC,iBAAL,GAAyB,CAAC,CAA1B;AACH;;;;qCAEY;AACT,gBAAI,KAAKA,iBAAL,GAAyB,CAAzB,IAA8B,KAAKF,MAAL,CAAYG,MAA9C,EAAsD;AAClD,qBAAKH,MAAL,CAAYI,IAAZ,CAAiB,IAAIC,GAAJ,EAAjB;AACH;;AAED,iBAAKJ,KAAL,GAAa,KAAKD,MAAL,CAAY,EAAE,KAAKE,iBAAnB,CAAb;AACH;;;4BAEGI,U,EAAYC,O,EAAS;AACrB,gBAAI,KAAKN,KAAL,KAAe,IAAnB,EAAyB;AACrB,qBAAKA,KAAL,CAAWO,GAAX,CAAeF,UAAf,EAA2BC,OAA3B;AACH;AACJ;;;6BAEID,U,EAAY;AACb,gBAAI,KAAKL,KAAL,KAAe,IAAnB,EAAyB;AACrB,uBAAOQ,SAAP;AACH;;AAED,gBAAIF,UAAUE,SAAd;AACA,gBAAIR,QAAQ,KAAKA,KAAjB;AACA,gBAAIS,QAAQ,KAAKR,iBAAjB;;AAEA,mBAAOK,YAAYE,SAAZ,IAAyBC,SAAS,CAAzC,EAA4C;AACxCH,0BAAUN,MAAMU,GAAN,CAAUL,UAAV,CAAV;AACAL,wBAAQ,KAAKD,MAAL,CAAY,EAAEU,KAAd,CAAR;AACH;;AAED,mBAAOH,OAAP;AACH;;;oCAEW;AACR,iBAAKP,MAAL,CAAYY,MAAZ,CAAmB,KAAKV,iBAAxB,EAA2C,CAA3C;;AAEA,iBAAKD,KAAL,GAAa,EAAE,KAAKC,iBAAP,IAA4B,CAA5B,GAAgC,KAAKF,MAAL,CAAY,KAAKE,iBAAjB,CAAhC,GAAsE,IAAnF;AACH","file":"environment.js","sourcesContent":["export class Environment {\n\n    constructor() {\n        this.scopes = [];\n        this.scope = null;\n        this.currentScopeIndex = -1;\n    }\n\n    enterScope() {\n        if (this.currentScopeIndex + 1 >= this.scopes.length) {\n            this.scopes.push(new Map());\n        }\n\n        this.scope = this.scopes[++this.currentScopeIndex];\n    }\n\n    add(identifier, address) {\n        if (this.scope !== null) {\n            this.scope.set(identifier, address);\n        }\n    }\n\n    find(identifier) {\n        if (this.scope === null) {\n            return undefined;\n        }\n\n        let address = undefined;\n        let scope = this.scope;\n        let index = this.currentScopeIndex;\n\n        while (address === undefined && index >= 0) {\n            address = scope.get(identifier);\n            scope = this.scopes[--index];\n        }\n\n        return address;\n    }\n\n    exitScope() {\n        this.scopes.splice(this.currentScopeIndex, 1);\n\n        this.scope = --this.currentScopeIndex >= 0 ? this.scopes[this.currentScopeIndex] : null;\n    }\n}"]}