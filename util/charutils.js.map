{"version":3,"sources":["../../../src/main/util/charutils.js"],"names":["CharUtils","char","isLetter","isDigit","code","charCodeAt","test","isLetterOrDigit","isOperator","isBeginningOfIdentifier","isBeginningOfNumber","isBeginningOfString"],"mappings":";;;;;;;;;;IAAaA,S,WAAAA,S;;;;;;;wCAEcC,I,EAAM;AACzB,mBAAOD,UAAUE,QAAV,CAAmBD,IAAnB,KAA4BD,UAAUG,OAAV,CAAkBF,IAAlB,CAAnC;AACH;;;iCAEeA,I,EAAM;AAClB,gBAAIG,OAAOH,KAAKI,UAAL,CAAgB,CAAhB,CAAX;;AAEA,mBAAQD,QAAQ,EAAR,IAAcA,QAAQ,EAAvB,IAA+BA,QAAQ,EAAR,IAAcA,QAAQ,GAA5D;AACH;;;gCAEcH,I,EAAM;AACjB,gBAAIG,OAAOH,KAAKI,UAAL,CAAgB,CAAhB,CAAX;;AAEA,mBAAOD,QAAQ,EAAR,IAAcA,QAAQ,EAA7B;AACH;;;qCAEmBH,I,EAAM;AACtB,mBAAO,iCAAgCK,IAAhC,CAAqCL,IAArC;AAAP;AACH;;;oCAEkBA,I,EAAM;AACrB,mBAAOA,SAAS,GAAT,IAAgBA,SAAS,GAAzB,IAAgCA,SAAS,GAAzC,IACAA,SAAS,GADT,IACgBA,SAAS,GADzB,IACgCA,SAAS,GADzC,IAEAA,SAAS,GAFT,IAEgBA,SAAS,GAFhC;AAGH;;;kCAEgBA,I,EAAM;AACnB,mBAAOA,SAAS,IAAT,IAAiBA,SAAS,MAAjC;AACH;;;8BAEYA,I,EAAM;AACf,mBAAOA,SAAS,GAAhB;AACH;;;mCAEiBA,I,EAAM;AACpB,mBAAOA,SAAS,GAAT,IAAgBA,SAAS,GAAzB,IAAgCA,SAAS,GAAzC,IAAgDA,SAAS,GAAzD,IACAA,SAAS,GADT,IACgBA,SAAS,GADzB,IACgCA,SAAS,GADzC,IACgDA,SAAS,GADzD,IAEAA,SAAS,GAFT,IAEgBA,SAAS,GAFzB,IAEgCA,SAAS,GAFzC,IAEgDA,SAAS,GAFzD,IAGAA,SAAS,GAHT,IAGgBA,SAAS,GAHzB,IAGgCA,SAAS,GAHhD;AAIH;;;yCAEuBA,I,EAAM;AAC1B,mBAAOA,SAAS,GAAT,IAAiBD,UAAUO,eAAV,CAA0BN,IAA1B,CAAjB,IAAoDD,UAAUQ,UAAV,CAAqBP,IAArB,CAA3D;AACH;;;gDAE8BA,I,EAAM;AACjC,mBAAOD,UAAUE,QAAV,CAAmBD,IAAnB,KAA4BA,SAAS,GAA5C;AACH;;;4CAE0BA,I,EAAM;AAC7B,mBAAOD,UAAUG,OAAV,CAAkBF,IAAlB,KAA2BA,SAAS,GAA3C;AACH;;;4CAE0BA,I,EAAM;AAC7B,mBAAOA,SAAS,GAAhB;AACH;;;yCAEuBA,I,EAAM;AAC1B,mBAAOA,SAAS,GAAT,IAAgBA,SAAS,GAAhC;AACH;;;6CAE2BA,I,EAAM;AAC9B,mBAAOD,UAAUE,QAAV,CAAmBD,IAAnB,KAA4BD,UAAUS,uBAAV,CAAkCR,IAAlC,CAA5B,IACAD,UAAUU,mBAAV,CAA8BT,IAA9B,CADA,IACuCD,UAAUW,mBAAV,CAA8BV,IAA9B,CAD9C;AAEH;;;0CAEwBA,I,EAAM;AAC3B,mBAAOA,SAAS,IAAhB;AACH;;;8CAE4BA,I,EAAM;AAC/B,mBAAOA,SAAS,IAAT,IAAiBA,SAAS,IAA1B,IAAkCA,SAAS,GAA3C,IACAA,SAAS,GADT,IACgBA,SAAS,GADzB,IACgCA,SAAS,GADzC,IAEAA,SAAS,GAFT,IAEgBA,SAAS,GAFzB,IAEgCA,SAAS,GAFhD;AAGH;;;0CAEwBA,I,EAAM;AAC3B,mBAAOA,SAAS,IAAhB;AACH","file":"charutils.js","sourcesContent":["export class CharUtils {\n\n    static isLetterOrDigit(char) {\n        return CharUtils.isLetter(char) || CharUtils.isDigit(char);\n    }\n\n    static isLetter(char) {\n        var code = char.charCodeAt(0);\n\n        return (code >= 65 && code <= 90) || (code >= 97 && code <= 122);\n    }\n\n    static isDigit(char) {\n        var code = char.charCodeAt(0);\n\n        return code >= 48 && code <= 57;\n    }\n\n    static isWhitespace(char) {\n        return /[ \\t\\r\\f\\v\\u00A0\\u2028\\u2029]/.test(char);\n    }\n\n    static isDelimiter(char) {\n        return char === '{' || char === '[' || char === '('\n            || char === '}' || char === ']' || char === ')'\n            || char === ':' || char === ',';\n    }\n\n    static isNewline(char) {\n        return char === '\\n' || char === '\\r\\n';\n    }\n\n    static isDot(char) {\n        return char === '.';\n    }\n\n    static isOperator(char) {\n        return char === '+' || char === '-' || char === '*' || char === '/'\n            || char === '=' || char === '>' || char === '<' || char === '!'\n            || char === '&' || char === '|' || char === '%' || char === '~'\n            || char === '$' || char === '~' || char === '^';\n    }\n\n    static isIdentifierPart(char) {\n        return char === '_' ||  CharUtils.isLetterOrDigit(char) || CharUtils.isOperator(char);\n    }\n\n    static isBeginningOfIdentifier(char) {\n        return CharUtils.isLetter(char) || char === '_';\n    }\n\n    static isBeginningOfNumber(char) {\n        return CharUtils.isDigit(char) || char === '.';\n    }\n\n    static isBeginningOfString(char) {\n        return char === '\"';\n    }\n\n    static isExponentSymbol(char) {\n        return char === 'e' || char === 'E';\n    }\n\n    static isBeginningOfLiteral(char) {\n        return CharUtils.isLetter(char) || CharUtils.isBeginningOfIdentifier(char)\n            || CharUtils.isBeginningOfNumber(char) || CharUtils.isBeginningOfString(char);\n    }\n\n    static isEscapeCharacter(char) {\n        return char === '\\\\';\n    }\n\n    static isEndOfEscapeSequence(char) {\n        return char === '\\\"' || char === '\\\\' || char === 'n'\n            || char === 'r' || char === 't' || char === 'b'\n            || char === 'f' || char === 'v' || char === '0';\n    }\n\n    static isStringDelimiter(char) {\n        return char === '\\\"';\n    }\n}"]}